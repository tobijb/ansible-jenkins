---

##
##   This playbook should install Jenkins, plugins, and any other packages
## Jenkins depends on.  Configuration of Jenkins itself is handled in the
## supporting task includes.
##
## BIG THANKS!!!!!
##  Geerlingguy!  https://github.com/geerlingguy/ansible-role-jenkins for a lot of code!

- name: Install External APT source key
  apt_key:
    url: '{{ jenkins_repo_key_url }}'
    state: present

- name: Install External APT source
  apt_repository:
    repo: '{{ jenkins_repo_url }}'
    state: present
    update_cache: yes

- name: Install Jenkins
  apt:
    pkg: jenkins
    state: latest

- name: Create external directory to supporting tools
  file:
    path: '{{ item }}'
    owner: '{{ jenkins_system_user }}'
    group: '{{ jenkins_system_group }}'
    state: directory
  with_items:
    - '{{ jenkins_ext_cli_root }}'
    - '{{ jenkins_ext_job_builder_root }}'

- name: Ensure Jenkins is started and runs on startup.
  service:
    name: jenkins
    state: started
    enabled: yes

- name: Wait for Jenkins to start up before proceeding.
  shell: curl --head --silent {{ jenkins_url }}/cli/
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"
  changed_when: false

- name: Get the jenkins-cli jarfile from the Jenkins server.
  get_url:
    url: "{{ jenkins_url }}/jnlpJars/jenkins-cli.jar"
    dest: "{{ jenkins_ext_cli_root }}/jenkins-cli"
    owner: '{{ jenkins_system_user }}'
    group: '{{ jenkins_system_group }}'
  register: jenkins_jarfile_get
  until: "'OK' in jenkins_jarfile_get.msg or 'file already exists' in jenkins_jarfile_get.msg"
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"

- name: Set persistent command for jenkins-cli actions
  set_fact: jenkins_cli="java -jar {{ jenkins_jarfile_get.dest }} -s {{ jenkins_url }}"

# Jenkins doesn't allow updates via CLI, though that is required before plugins
# can be installed via CLI. See: https://gist.github.com/rowan-m/1026918
- name: Create Jenkins updates folder.
  file:
    path: /var/lib/jenkins/updates
    owner: '{{ jenkins_system_user }}'
    group: '{{ jenkins_system_group }}'
    mode: 0755
    state: directory

- name: Update Jenkins plugin data.
  shell: >
    curl -L https://updates.jenkins-ci.org/update-center.json | sed '1d;$d' > /var/lib/jenkins/updates/default.json
    creates=/var/lib/jenkins/updates/default.json
- name: Permissions for default.json updates info.
  file:
    path: /var/lib/jenkins/updates/default.json
    owner: '{{ jenkins_system_user }}'
    group: '{{ jenkins_system_group }}'
    mode: 0755

- name: Install Jenkins plugins.
  command: >
    {{ jenkins_cli }} install-plugin {{ item }}
    creates=/var/lib/jenkins/plugins/{{ item }}.jpi
  with_flattened:
    - jenkins_plugins
    - jenkins_group_plugins
    - jenkins_host_plugins
  notify: restart jenkins

- name: Install jenkins-job-builder
  pip:
    name: '{{ item }}'
    state: present
  with_items:
    - PyYAML
    - python-jenkins
    - jenkins-job-builder

- name: Configure jenkins-job-builder
  template:
    src: jenkins-job-builder/config.ini.j2
    dest: '{{ jenkins_ext_job_builder_config }}'
