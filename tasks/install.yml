---

##
##   This playbook should install Jenkins, plugins, and any other packages
## Jenkins depends on.  Configuration of Jenkins itself is handled in the
## supporting task includes.
##
## BIG THANKS!!!!!
##  Geerlingguy!  https://github.com/geerlingguy/ansible-role-jenkins for a lot of code!

- name: Install External APT source key
  apt_key:
    url: '{{ jenkins_repo_key_url }}'
    state: present

- name: Install External APT source
  apt_repository:
    repo: '{{ jenkins_repo_url }}'
    state: present
    update_cache: yes

- name: Install Jenkins
  apt: 
    pkg: jenkins 
    state: latest

- name: Create external directory to install jenkins-cli and jenkins-job-builder
  file:
    path: '{{ item }}'
    owner: '{{ jenkins_user }}'
    group: '{{ jenkins_group }}'
    state: directory
  with_items:
    - '{{ jenkins_ext_root }}'
    - '{{ jenkins_ext_cli_root }}'
    - '{{ jenkins_ext_job_builder_root }}'

- name: Ensure Jenkins is started and runs on startup.
  service: 
    name: jenkins 
    state: started 
    enabled: yes

- name: Wait for Jenkins to start up before proceeding.
  shell: curl --head --silent http://{{ jenkins_hostname }}:8080/cli/
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"
  changed_when: false

- name: Get the jenkins-cli jarfile from the Jenkins server.
  get_url:
    url: "http://{{ jenkins_hostname }}:8080/jnlpJars/jenkins-cli.jar"
    dest: "{{ jenkins_ext_cli_root }}/jenkins-cli"
    owner: '{{ jenkins_user }}'
    group: '{{ jenkins_group }}'
  register: jarfile_get
  until: "'OK' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"

# Jenkins doesn't allow updates via CLI, though that is required before plugins
# can be installed via CLI. See: https://gist.github.com/rowan-m/1026918
- name: Create Jenkins updates folder.
  file:
    path: /var/lib/jenkins/updates
    owner: '{{ jenkins_user }}'
    group: '{{ jenkins_group }}'
    mode: 0755
    state: directory

- name: Update Jenkins plugin data.
  shell: >
    curl -L https://updates.jenkins-ci.org/update-center.json | sed '1d;$d' > /var/lib/jenkins/updates/default.json
    creates=/var/lib/jenkins/updates/default.json
- name: Permissions for default.json updates info.
  file:
    path: /var/lib/jenkins/updates/default.json
    owner: '{{ jenkins_user }}'
    group: '{{ jenkins_group }}'
    mode: 0755

- name: Install Jenkins plugins.
  command: >
    java -jar {{ jenkins_ext_cli_root }}/jenkins-cli -s http://{{ jenkins_hostname }}:8080/ install-plugin {{ item }}
    creates=/var/lib/jenkins/plugins/{{ item }}.jpi
  with_items: jenkins_plugins
  notify: restart jenkins

- name: Install jenkins-job-builder
  apt:
    pkg: jenkins-job-builder
    state: present
