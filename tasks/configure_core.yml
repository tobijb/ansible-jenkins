---

##
## Configure Jenkins Core
##

- name: Ensure jenkins_ext_groovy_root exists
  file:
    path: '{{ jenkins_ext_groovy_root }}'
    state: directory

- name: Generate Groovy Script template for global security and admin user
  template:
    src: 'groovy/{{ item }}.groovy.j2'
    dest: '{{ jenkins_ext_groovy_root }}/{{ item }}.groovy'
  register: jenkins_groovy_script_templates
  with_flattened:
    - '{{ jenkins_security_check_groovy_script }}' # Individual script used below
    - '{{ jenkins_security_enable_groovy_script }}' # Individual script used below
    - jenkins_groovy_scripts
    - jenkins_group_groovy_scripts
    - jenkins_host_groovy_scripts

- name: Test if Auth is configured
  command: '{{ jenkins_cli }} groovy {{ jenkins_ext_groovy_root }}/{{ item }}.groovy'
  register: jenkins_auth_result
  with_items:
    - '{{ jenkins_security_check_groovy_script }}'
  failed_when: ( jenkins_auth_result.stderr != "" ) and
               ( 'hudson.security.AccessDeniedException2' not in jenkins_auth_result.stderr )
  changed_when: False
  when: jenkins_auth is defined and jenkins_auth

- name: Configure auth if it is not configured...
  command: '{{ jenkins_cli }} groovy {{ jenkins_ext_groovy_root }}/{{ item }}.groovy'
  register: jenkins_configure_auth_result
  with_items:
    - '{{ jenkins_security_enable_groovy_script }}'
  when: ( jenkins_auth_result is defined ) and
        ( 'hudson.security.AccessDeniedException2' not in jenkins_auth_result.stderr )

- name: Login to Jenkins for the next task to run groovy
  command: '{{ jenkins_cli }} login --username {{ jenkins_service_user }} --password {{ jenkins_service_password }}'
  register: jenkins_cli_login
  changed_when: False
  no_log: true
  when: jenkins_configure_auth_result is defined

- name: Install Jenkins plugins.
  command: >
    {{ jenkins_cli }} install-plugin {{ item }}
    creates=/var/lib/jenkins/plugins/{{ item }}.jpi
  with_flattened:
    - jenkins_plugins
    - jenkins_group_plugins
    - jenkins_host_plugins
  notify: restart jenkins

- name: Run Groovy scripts using jenkins-cli
  command: '{{ jenkins_cli }} groovy {{ jenkins_ext_groovy_root }}/{{ item }}.groovy'
  with_flattened:
    - jenkins_groovy_scripts
    - jenkins_group_groovy_scripts
    - jenkins_host_groovy_scripts
  when: jenkins_groovy_script_templates is defined and
        jenkins_groovy_script_templates.changed

- name: Logout of Jenkins
  command: '{{ jenkins_cli }} logout'
  changed_when: False
  when: jenkins_cli_login is defined
